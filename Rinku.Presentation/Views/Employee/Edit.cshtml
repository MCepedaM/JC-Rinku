@using Rinku.Presentation.Helpers;
@model Rinku.Presentation.Models.EmployeeViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>EmployeeViewModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Rol, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Rol", new List<SelectListItem>
                    {
                      new SelectListItem{ Text = "Chofer", Value = "1" },
                      new SelectListItem{ Text = "Cargador", Value = "2" },
                      new SelectListItem{ Text = "Auxiliar", Value = "3" }
                    }, htmlAttributes: new { @class = "form-control", id = "Rol" })


                @*@Html.EditorFor(model => model.Rol, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.Rol, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.interno, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.interno)
                    @Html.ValidationMessageFor(model => model.interno, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Activo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Activo)
                    @Html.ValidationMessageFor(model => model.Activo, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="well" style="max-width: 400px; margin: 0 auto 10px;">
            <button type="button" class="btn btn-success btn-lg btn-block" onclick="update()">
                <span class="glyphicon glyphicon-pencil"></span>&nbsp; Guardar Empleado
            </button>
        </div>
    </div>
}

<div>
    <a href="@Url.Action("Index","Employee")" class=""><span class="glyphicon glyphicon-hand-left"></span> Regresar a lista de empleados</a>
</div>



@section scripts{
    <script type="text/javascript">
            @(Html.JsMinify(@<text>

        function update() {
            $.ajax({
                type: "POST",
                url: virtualPath + "Employee/Create",
                data: $("form").serialize(),
                beforeSend: beforeSendAjax,
                success: success,
                error: error,
                complete: function () {
                    $('#ajax').modal('hide');
                }

            });
        }

       </text>))
    </script>

}
