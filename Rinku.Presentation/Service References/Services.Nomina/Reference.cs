//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Rinku.Presentation.Services.Nomina {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Employee", Namespace="http://schemas.datacontract.org/2004/07/Rinku.Domain")]
    [System.SerializableAttribute()]
    public partial class Employee : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActivoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short RolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool internoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Activo {
            get {
                return this.ActivoField;
            }
            set {
                if ((this.ActivoField.Equals(value) != true)) {
                    this.ActivoField = value;
                    this.RaisePropertyChanged("Activo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nombre {
            get {
                return this.NombreField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreField, value) != true)) {
                    this.NombreField = value;
                    this.RaisePropertyChanged("Nombre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Rol {
            get {
                return this.RolField;
            }
            set {
                if ((this.RolField.Equals(value) != true)) {
                    this.RolField = value;
                    this.RaisePropertyChanged("Rol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool interno {
            get {
                return this.internoField;
            }
            set {
                if ((this.internoField.Equals(value) != true)) {
                    this.internoField = value;
                    this.RaisePropertyChanged("interno");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Movement", Namespace="http://schemas.datacontract.org/2004/07/Rinku.Domain")]
    [System.SerializableAttribute()]
    public partial class Movement : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short CubreRolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CubreTurnoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Rinku.Presentation.Services.Nomina.Employee EmpleadoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EntregasField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FechaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short CubreRol {
            get {
                return this.CubreRolField;
            }
            set {
                if ((this.CubreRolField.Equals(value) != true)) {
                    this.CubreRolField = value;
                    this.RaisePropertyChanged("CubreRol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CubreTurno {
            get {
                return this.CubreTurnoField;
            }
            set {
                if ((this.CubreTurnoField.Equals(value) != true)) {
                    this.CubreTurnoField = value;
                    this.RaisePropertyChanged("CubreTurno");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Rinku.Presentation.Services.Nomina.Employee Empleado {
            get {
                return this.EmpleadoField;
            }
            set {
                if ((object.ReferenceEquals(this.EmpleadoField, value) != true)) {
                    this.EmpleadoField = value;
                    this.RaisePropertyChanged("Empleado");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Entregas {
            get {
                return this.EntregasField;
            }
            set {
                if ((this.EntregasField.Equals(value) != true)) {
                    this.EntregasField = value;
                    this.RaisePropertyChanged("Entregas");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Fecha {
            get {
                return this.FechaField;
            }
            set {
                if ((this.FechaField.Equals(value) != true)) {
                    this.FechaField = value;
                    this.RaisePropertyChanged("Fecha");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Salary", Namespace="http://schemas.datacontract.org/2004/07/Rinku.Domain")]
    [System.SerializableAttribute()]
    public partial class Salary : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AdicionalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BonoXHoraField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DiasLaboradosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EntregasField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MontoIvaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MontoTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PorcentajeIvaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short RolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SubtotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ValesDespensaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool internoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Adicional {
            get {
                return this.AdicionalField;
            }
            set {
                if ((this.AdicionalField.Equals(value) != true)) {
                    this.AdicionalField = value;
                    this.RaisePropertyChanged("Adicional");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal BonoXHora {
            get {
                return this.BonoXHoraField;
            }
            set {
                if ((this.BonoXHoraField.Equals(value) != true)) {
                    this.BonoXHoraField = value;
                    this.RaisePropertyChanged("BonoXHora");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DiasLaborados {
            get {
                return this.DiasLaboradosField;
            }
            set {
                if ((this.DiasLaboradosField.Equals(value) != true)) {
                    this.DiasLaboradosField = value;
                    this.RaisePropertyChanged("DiasLaborados");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Entregas {
            get {
                return this.EntregasField;
            }
            set {
                if ((this.EntregasField.Equals(value) != true)) {
                    this.EntregasField = value;
                    this.RaisePropertyChanged("Entregas");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MontoIva {
            get {
                return this.MontoIvaField;
            }
            set {
                if ((this.MontoIvaField.Equals(value) != true)) {
                    this.MontoIvaField = value;
                    this.RaisePropertyChanged("MontoIva");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MontoTotal {
            get {
                return this.MontoTotalField;
            }
            set {
                if ((this.MontoTotalField.Equals(value) != true)) {
                    this.MontoTotalField = value;
                    this.RaisePropertyChanged("MontoTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nombre {
            get {
                return this.NombreField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreField, value) != true)) {
                    this.NombreField = value;
                    this.RaisePropertyChanged("Nombre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PorcentajeIva {
            get {
                return this.PorcentajeIvaField;
            }
            set {
                if ((this.PorcentajeIvaField.Equals(value) != true)) {
                    this.PorcentajeIvaField = value;
                    this.RaisePropertyChanged("PorcentajeIva");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Rol {
            get {
                return this.RolField;
            }
            set {
                if ((this.RolField.Equals(value) != true)) {
                    this.RolField = value;
                    this.RaisePropertyChanged("Rol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Subtotal {
            get {
                return this.SubtotalField;
            }
            set {
                if ((this.SubtotalField.Equals(value) != true)) {
                    this.SubtotalField = value;
                    this.RaisePropertyChanged("Subtotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ValesDespensa {
            get {
                return this.ValesDespensaField;
            }
            set {
                if ((this.ValesDespensaField.Equals(value) != true)) {
                    this.ValesDespensaField = value;
                    this.RaisePropertyChanged("ValesDespensa");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool interno {
            get {
                return this.internoField;
            }
            set {
                if ((this.internoField.Equals(value) != true)) {
                    this.internoField = value;
                    this.RaisePropertyChanged("interno");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Services.Nomina.IRinkuService")]
    public interface IRinkuService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRinkuService/GetEmpleados", ReplyAction="http://tempuri.org/IRinkuService/GetEmpleadosResponse")]
        Rinku.Presentation.Services.Nomina.Employee[] GetEmpleados();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRinkuService/GetEmpleados", ReplyAction="http://tempuri.org/IRinkuService/GetEmpleadosResponse")]
        System.Threading.Tasks.Task<Rinku.Presentation.Services.Nomina.Employee[]> GetEmpleadosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRinkuService/AddUpdateEmpleados", ReplyAction="http://tempuri.org/IRinkuService/AddUpdateEmpleadosResponse")]
        bool AddUpdateEmpleados(Rinku.Presentation.Services.Nomina.Employee emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRinkuService/AddUpdateEmpleados", ReplyAction="http://tempuri.org/IRinkuService/AddUpdateEmpleadosResponse")]
        System.Threading.Tasks.Task<bool> AddUpdateEmpleadosAsync(Rinku.Presentation.Services.Nomina.Employee emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRinkuService/DeleteEmpleados", ReplyAction="http://tempuri.org/IRinkuService/DeleteEmpleadosResponse")]
        bool DeleteEmpleados(Rinku.Presentation.Services.Nomina.Employee emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRinkuService/DeleteEmpleados", ReplyAction="http://tempuri.org/IRinkuService/DeleteEmpleadosResponse")]
        System.Threading.Tasks.Task<bool> DeleteEmpleadosAsync(Rinku.Presentation.Services.Nomina.Employee emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRinkuService/GetEmpleado", ReplyAction="http://tempuri.org/IRinkuService/GetEmpleadoResponse")]
        Rinku.Presentation.Services.Nomina.Employee GetEmpleado(Rinku.Presentation.Services.Nomina.Employee emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRinkuService/GetEmpleado", ReplyAction="http://tempuri.org/IRinkuService/GetEmpleadoResponse")]
        System.Threading.Tasks.Task<Rinku.Presentation.Services.Nomina.Employee> GetEmpleadoAsync(Rinku.Presentation.Services.Nomina.Employee emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRinkuService/AddUpdateMovimientos", ReplyAction="http://tempuri.org/IRinkuService/AddUpdateMovimientosResponse")]
        bool AddUpdateMovimientos(Rinku.Presentation.Services.Nomina.Movement mov);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRinkuService/AddUpdateMovimientos", ReplyAction="http://tempuri.org/IRinkuService/AddUpdateMovimientosResponse")]
        System.Threading.Tasks.Task<bool> AddUpdateMovimientosAsync(Rinku.Presentation.Services.Nomina.Movement mov);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRinkuService/GetMovimientos", ReplyAction="http://tempuri.org/IRinkuService/GetMovimientosResponse")]
        Rinku.Presentation.Services.Nomina.Movement[] GetMovimientos(System.DateTime fechainicio, System.DateTime FechaFin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRinkuService/GetMovimientos", ReplyAction="http://tempuri.org/IRinkuService/GetMovimientosResponse")]
        System.Threading.Tasks.Task<Rinku.Presentation.Services.Nomina.Movement[]> GetMovimientosAsync(System.DateTime fechainicio, System.DateTime FechaFin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRinkuService/GetMovimientosByEmpleado", ReplyAction="http://tempuri.org/IRinkuService/GetMovimientosByEmpleadoResponse")]
        Rinku.Presentation.Services.Nomina.Movement[] GetMovimientosByEmpleado(Rinku.Presentation.Services.Nomina.Employee emp, System.DateTime fechainicio, System.DateTime FechaFin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRinkuService/GetMovimientosByEmpleado", ReplyAction="http://tempuri.org/IRinkuService/GetMovimientosByEmpleadoResponse")]
        System.Threading.Tasks.Task<Rinku.Presentation.Services.Nomina.Movement[]> GetMovimientosByEmpleadoAsync(Rinku.Presentation.Services.Nomina.Employee emp, System.DateTime fechainicio, System.DateTime FechaFin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRinkuService/DeleteMoviento", ReplyAction="http://tempuri.org/IRinkuService/DeleteMovientoResponse")]
        bool DeleteMoviento(Rinku.Presentation.Services.Nomina.Movement mov);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRinkuService/DeleteMoviento", ReplyAction="http://tempuri.org/IRinkuService/DeleteMovientoResponse")]
        System.Threading.Tasks.Task<bool> DeleteMovientoAsync(Rinku.Presentation.Services.Nomina.Movement mov);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRinkuService/GetMovientoById", ReplyAction="http://tempuri.org/IRinkuService/GetMovientoByIdResponse")]
        Rinku.Presentation.Services.Nomina.Movement GetMovientoById(int movId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRinkuService/GetMovientoById", ReplyAction="http://tempuri.org/IRinkuService/GetMovientoByIdResponse")]
        System.Threading.Tasks.Task<Rinku.Presentation.Services.Nomina.Movement> GetMovientoByIdAsync(int movId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRinkuService/GetSalarios", ReplyAction="http://tempuri.org/IRinkuService/GetSalariosResponse")]
        Rinku.Presentation.Services.Nomina.Salary[] GetSalarios(System.DateTime fechainicio, System.DateTime FechaFin, int IdEmpleado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRinkuService/GetSalarios", ReplyAction="http://tempuri.org/IRinkuService/GetSalariosResponse")]
        System.Threading.Tasks.Task<Rinku.Presentation.Services.Nomina.Salary[]> GetSalariosAsync(System.DateTime fechainicio, System.DateTime FechaFin, int IdEmpleado);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRinkuServiceChannel : Rinku.Presentation.Services.Nomina.IRinkuService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RinkuServiceClient : System.ServiceModel.ClientBase<Rinku.Presentation.Services.Nomina.IRinkuService>, Rinku.Presentation.Services.Nomina.IRinkuService {
        
        public RinkuServiceClient() {
        }
        
        public RinkuServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RinkuServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RinkuServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RinkuServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Rinku.Presentation.Services.Nomina.Employee[] GetEmpleados() {
            return base.Channel.GetEmpleados();
        }
        
        public System.Threading.Tasks.Task<Rinku.Presentation.Services.Nomina.Employee[]> GetEmpleadosAsync() {
            return base.Channel.GetEmpleadosAsync();
        }
        
        public bool AddUpdateEmpleados(Rinku.Presentation.Services.Nomina.Employee emp) {
            return base.Channel.AddUpdateEmpleados(emp);
        }
        
        public System.Threading.Tasks.Task<bool> AddUpdateEmpleadosAsync(Rinku.Presentation.Services.Nomina.Employee emp) {
            return base.Channel.AddUpdateEmpleadosAsync(emp);
        }
        
        public bool DeleteEmpleados(Rinku.Presentation.Services.Nomina.Employee emp) {
            return base.Channel.DeleteEmpleados(emp);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteEmpleadosAsync(Rinku.Presentation.Services.Nomina.Employee emp) {
            return base.Channel.DeleteEmpleadosAsync(emp);
        }
        
        public Rinku.Presentation.Services.Nomina.Employee GetEmpleado(Rinku.Presentation.Services.Nomina.Employee emp) {
            return base.Channel.GetEmpleado(emp);
        }
        
        public System.Threading.Tasks.Task<Rinku.Presentation.Services.Nomina.Employee> GetEmpleadoAsync(Rinku.Presentation.Services.Nomina.Employee emp) {
            return base.Channel.GetEmpleadoAsync(emp);
        }
        
        public bool AddUpdateMovimientos(Rinku.Presentation.Services.Nomina.Movement mov) {
            return base.Channel.AddUpdateMovimientos(mov);
        }
        
        public System.Threading.Tasks.Task<bool> AddUpdateMovimientosAsync(Rinku.Presentation.Services.Nomina.Movement mov) {
            return base.Channel.AddUpdateMovimientosAsync(mov);
        }
        
        public Rinku.Presentation.Services.Nomina.Movement[] GetMovimientos(System.DateTime fechainicio, System.DateTime FechaFin) {
            return base.Channel.GetMovimientos(fechainicio, FechaFin);
        }
        
        public System.Threading.Tasks.Task<Rinku.Presentation.Services.Nomina.Movement[]> GetMovimientosAsync(System.DateTime fechainicio, System.DateTime FechaFin) {
            return base.Channel.GetMovimientosAsync(fechainicio, FechaFin);
        }
        
        public Rinku.Presentation.Services.Nomina.Movement[] GetMovimientosByEmpleado(Rinku.Presentation.Services.Nomina.Employee emp, System.DateTime fechainicio, System.DateTime FechaFin) {
            return base.Channel.GetMovimientosByEmpleado(emp, fechainicio, FechaFin);
        }
        
        public System.Threading.Tasks.Task<Rinku.Presentation.Services.Nomina.Movement[]> GetMovimientosByEmpleadoAsync(Rinku.Presentation.Services.Nomina.Employee emp, System.DateTime fechainicio, System.DateTime FechaFin) {
            return base.Channel.GetMovimientosByEmpleadoAsync(emp, fechainicio, FechaFin);
        }
        
        public bool DeleteMoviento(Rinku.Presentation.Services.Nomina.Movement mov) {
            return base.Channel.DeleteMoviento(mov);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteMovientoAsync(Rinku.Presentation.Services.Nomina.Movement mov) {
            return base.Channel.DeleteMovientoAsync(mov);
        }
        
        public Rinku.Presentation.Services.Nomina.Movement GetMovientoById(int movId) {
            return base.Channel.GetMovientoById(movId);
        }
        
        public System.Threading.Tasks.Task<Rinku.Presentation.Services.Nomina.Movement> GetMovientoByIdAsync(int movId) {
            return base.Channel.GetMovientoByIdAsync(movId);
        }
        
        public Rinku.Presentation.Services.Nomina.Salary[] GetSalarios(System.DateTime fechainicio, System.DateTime FechaFin, int IdEmpleado) {
            return base.Channel.GetSalarios(fechainicio, FechaFin, IdEmpleado);
        }
        
        public System.Threading.Tasks.Task<Rinku.Presentation.Services.Nomina.Salary[]> GetSalariosAsync(System.DateTime fechainicio, System.DateTime FechaFin, int IdEmpleado) {
            return base.Channel.GetSalariosAsync(fechainicio, FechaFin, IdEmpleado);
        }
    }
}
